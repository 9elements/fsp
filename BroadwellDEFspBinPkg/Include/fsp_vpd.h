/** @file

Copyright (c) 2015, Intel Corporation. All rights reserved.<BR>

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, this
  list of conditions and the following disclaimer in the documentation and/or
  other materials provided with the distribution.
* Neither the name of Intel Corporation nor the names of its contributors may
  be used to endorse or promote products derived from this software without
  specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  THE POSSIBILITY OF SUCH DAMAGE.

  This file is automatically generated. Please do NOT modify !!!

**/

#ifndef __FSPUPDVPD_H__
#define __FSPUPDVPD_H__

#pragma pack(1)




typedef struct _UPD_DATA_REGION {
/**Offset 0x0000 
**/
  UINT64                      Signature;                     
/**Offset 0x0008 
**/
  UINT64                      Reserved;                      
/**Offset 0x0010 
**/
  UINT8                       UnusedUpdSpace0[16];           
/**Offset 0x0020 
   Debug serial port resource type. Select 'None' to have FSP generate no output. Select 'I/O' to have FSP generate output via a legacy I/O output (i.e. 0x2f8/0x3f8). 
**/
  UINT8                       SerialPortType;                
/**Offset 0x0021 
   16550 compatible serial port resource base address. (I/O or MMIO base address) 
**/
  UINT32                      SerialPortAddress;             
/**Offset 0x0025 
   Select 'Yes' to have FSP configure the specified UART. 
**/
  UINT8                       SerialPortConfigure;           
/**Offset 0x0026 
   If 'Configure Serial Port' is set to 'Yes', this will be the baud rate that the UART located at 'Serial Port Base' is configured to use. *: Not all ES2 part support this baudrate, check Sighting Report before change it. 
**/
  UINT8                       SerialPortBaudRate;            
/**Offset 0x0027 
   Select 'Yes' to have FSP initialize this controller. Note: If 'Yes' is selected, this controller will be mapped to the legacy IO port 0x3f8. 
**/
  UINT8                       SerialPortControllerInit0;     
/**Offset 0x0028 
   Select 'Yes' to have FSP initialize this controller. Note: If 'Yes' is selected, this controller will be mapped to the legacy IO port 0x2f8. 
**/
  UINT8                       SerialPortControllerInit1;     
/**Offset 0x0029 
   Set your bifurcation option for IOU1 port 
**/
  UINT8                       ConfigIOU1_PciPort3;           
/**Offset 0x002A 
   Set your bifurcation option for IOU2 port 
**/
  UINT8                       ConfigIOU2_PciPort1;           
/**Offset 0x002B 
   S0 = System will return to S0 state (boot) after power is re-applied. S5 = System will return to the S5 state (except if it was in S4, in which case it will return to S4). In the S5 state, the only enabled wake event is the Power Button or any enabled wake event that was preserved through the power failure. 
**/
  UINT8                       PowerStateAfterG3;             
/**Offset 0x002C 
   Enable/Disable PCH PCie Ports. Port bifurcation options set in Fuse Straps decide the final enabling of PCIe ports 
**/
  UINT8                       PchPciPort1;                   
/**Offset 0x002D 
   Enable/Disable PCH PCie Ports. Port bifurcation options set in Fuse Straps decide the final enabling of PCIe ports 
**/
  UINT8                       PchPciPort2;                   
/**Offset 0x002E 
   Enable/Disable PCH PCie Ports. Port bifurcation options set in Fuse Straps decide the final enabling of PCIe ports 
**/
  UINT8                       PchPciPort3;                   
/**Offset 0x002F 
   Enable/Disable PCH PCie Ports. Port bifurcation options set in Fuse Straps decide the final enabling of PCIe ports 
**/
  UINT8                       PchPciPort4;                   
/**Offset 0x0030 
   Enable/Disable PCH PCie Ports. Port bifurcation options set in Fuse Straps decide the final enabling of PCIe ports 
**/
  UINT8                       PchPciPort5;                   
/**Offset 0x0031 
   Enable/Disable PCH PCie Ports. Port bifurcation options set in Fuse Straps decide the final enabling of PCIe ports 
**/
  UINT8                       PchPciPort6;                   
/**Offset 0x0032 
   Enable/Disable PCH PCie Ports. Port bifurcation options set in Fuse Straps decide the final enabling of PCIe ports 
**/
  UINT8                       PchPciPort7;                   
/**Offset 0x0033 
   Enable/Disable PCH PCie Ports. Port bifurcation options set in Fuse Straps decide the final enabling of PCIe ports 
**/
  UINT8                       PchPciPort8;                   
/**Offset 0x0034 
   Enable/Disable the HotPlug for PCH PCie Ports 
**/
  UINT8                       HotPlug_PchPciPort1;           
/**Offset 0x0035 
   Enable/Disable the HotPlug for PCH PCie Ports 
**/
  UINT8                       HotPlug_PchPciPort2;           
/**Offset 0x0036 
   Enable/Disable the HotPlug for PCH PCie Ports 
**/
  UINT8                       HotPlug_PchPciPort3;           
/**Offset 0x0037 
   Enable/Disable the HotPlug for PCH PCie Ports 
**/
  UINT8                       HotPlug_PchPciPort4;           
/**Offset 0x0038 
   Enable/Disable the HotPlug for PCH PCie Ports 
**/
  UINT8                       HotPlug_PchPciPort5;           
/**Offset 0x0039 
   Enable/Disable the HotPlug for PCH PCie Ports 
**/
  UINT8                       HotPlug_PchPciPort6;           
/**Offset 0x003A 
   Enable/Disable the HotPlug for PCH PCie Ports 
**/
  UINT8                       HotPlug_PchPciPort7;           
/**Offset 0x003B 
   Enable/Disable the HotPlug for PCH PCie Ports 
**/
  UINT8                       HotPlug_PchPciPort8;           
/**Offset 0x003C 
   Enable or disable the EHCI controller at 00.1d.00. 
**/
  UINT8                       Ehci1Enable;                   
/**Offset 0x003D 
   Enable or disable the EHCI controller at 00.1a.00. 
**/
  UINT8                       Ehci2Enable;                   
/**Offset 0x003E 
   Enable or disable Intel(r) Hyper-Threading Technology. 
**/
  UINT8                       HyperThreading;                
/**Offset 0x003F 
   Set debug print output level. 
**/
  UINT8                       DebugOutputLevel;              
/**Offset 0x0040 
   Halt and Lock the TCO Timer. 
**/
  UINT8                       TcoTimerHaltLock;              
/**Offset 0x0041 
   Enable/Disable processor Turbo Mode. 
**/
  UINT8                       TurboMode;                     
/**Offset 0x0042 
   Select the performance state that should be set before OS hand-off. 
**/
  UINT8                       BootPerfMode;                  
/**Offset 0x0043 
   PCI-Express Root Port ASPM Setting 
**/
  UINT8                       PciePort1aAspm;                
/**Offset 0x0044 
   PCI-Express Root Port ASPM Setting 
**/
  UINT8                       PciePort1bAspm;                
/**Offset 0x0045 
   PCI-Express Root Port ASPM Setting 
**/
  UINT8                       PciePort3aAspm;                
/**Offset 0x0046 
   PCI-Express Root Port ASPM Setting 
**/
  UINT8                       PciePort3bAspm;                
/**Offset 0x0047 
   PCI-Express Root Port ASPM Setting 
**/
  UINT8                       PciePort3cAspm;                
/**Offset 0x0048 
   PCI-Express Root Port ASPM Setting 
**/
  UINT8                       PciePort3dAspm;                
/**Offset 0x0049 
   PCH PCIe Root Port ASPM Setting 
**/
  UINT8                       PchPciePort1Aspm;              
/**Offset 0x004A 
   PCH PCIe Root Port ASPM Setting 
**/
  UINT8                       PchPciePort2Aspm;              
/**Offset 0x004B 
   PCH PCIe Root Port ASPM Setting 
**/
  UINT8                       PchPciePort3Aspm;              
/**Offset 0x004C 
   PCH PCIe Root Port ASPM Setting 
**/
  UINT8                       PchPciePort4Aspm;              
/**Offset 0x004D 
   PCH PCIe Root Port ASPM Setting 
**/
  UINT8                       PchPciePort5Aspm;              
/**Offset 0x004E 
   PCH PCIe Root Port ASPM Setting 
**/
  UINT8                       PchPciePort6Aspm;              
/**Offset 0x004F 
   PCH PCIe Root Port ASPM Setting 
**/
  UINT8                       PchPciePort7Aspm;              
/**Offset 0x0050 
   PCH PCIe Root Port ASPM Setting 
**/
  UINT8                       PchPciePort8Aspm;              
/**Offset 0x0051 
   Enable this option to allow DFX Lock Bits to remain clear. 
**/
  UINT8                       DFXEnable;                     
/**Offset 0x0052 
   Enable/Disable the PCH Thermal Device (D31:F6). 
**/
  UINT8                       ThermalDeviceEnable;           
/**Offset 0x0053 
**/
  UINT8                       UnusedUpdSpace1[88];           
/**Offset 0x00AB 
   Enable/disable DDR ECC Support. 
**/
  UINT8                       MemEccSupport;                 
/**Offset 0x00AC 
   Select the memory type supported by this platform. 
**/
  UINT8                       MemDdrMemoryType;              
/**Offset 0x00AD 
   Force the Rank Multiplication factor for LRDIMM. 
**/
  UINT8                       MemRankMultiplication;         
/**Offset 0x00AE 
   Run the Rank Margin Tool after memory training. 
**/
  UINT8                       MemRankMarginTool;             
/**Offset 0x00AF 
   Enable data scrambling. 
**/
  UINT8                       MemScrambling;                 
/**Offset 0x00B0 
   Self refresh mode. 
**/
  UINT8                       MemRefreshMode;                
/**Offset 0x00B1 
   Select MC ODT Mode. 
**/
  UINT8                       MemMcOdtOverride;              
/**Offset 0x00B2 
   Enable/Disable DDR4 Command Address Parity 
**/
  UINT8                       MemCAParity;                   
/**Offset 0x00B3 
   Configure Thermal Throttling Mode. 
**/
  UINT8                       MemThermalThrottling;          
/**Offset 0x00B4 
   Configures CKE and related Memory Power Savings Features 
**/
  UINT8                       MemPowerSavingsMode;           
/**Offset 0x00B5 
   Configure Memory Electrical Throttling 
**/
  UINT8                       MemElectricalThrottling;       
/**Offset 0x00B6 
   Select Page Policy 
**/
  UINT8                       MemPagePolicy;                 
/**Offset 0x00B7 
   Splits the 0-4GB address space between two sockets, so that both sockets get a chunk of local memory below 4GB. 
**/
  UINT8                       MemSocketInterleaveBelow4G;    
/**Offset 0x00B8 
   Select Channel Interleaving setting. 
**/
  UINT8                       MemChannelInterleave;          
/**Offset 0x00B9 
   Select Rank Interleaving setting. 
**/
  UINT8                       MemRankInterleave;             
/**Offset 0x00BA 
   Select 'Yes' if memory is down. If set to 'Yes', at least one of the following SPD data pointers must also be provided. 
**/
  UINT8                       MemDownEnable;                 
/**Offset 0x00BB 
   If 'Memory Down' is 'Yes', this is the pointer to the SPD data for Channel 0, DIMM 0. Otherwise, this field is ignored. Specify 0x00000000 if this DIMM is not present. 
**/
  UINT32                      MemDownCh0Dimm0SpdPtr;         
/**Offset 0x00BF 
   If 'Memory Down' is 'Yes', this is the pointer to the SPD data for Channel 0, DIMM 1. Otherwise, this field is ignored. Specify 0x00000000 if this DIMM is not present. 
**/
  UINT32                      MemDownCh0Dimm1SpdPtr;         
/**Offset 0x00C3 
   If 'Memory Down' is 'Yes', this is the pointer to the SPD data for Channel 1, DIMM 0. Otherwise, this field is ignored. Specify 0x00000000 if this DIMM is not present. 
**/
  UINT32                      MemDownCh1Dimm0SpdPtr;         
/**Offset 0x00C7 
   If 'Memory Down' is 'Yes', this is the pointer to the SPD data for Channel 1, DIMM 1. Otherwise, this field is ignored. Specify 0x00000000 if this DIMM is not present. 
**/
  UINT32                      MemDownCh1Dimm1SpdPtr;         
/**Offset 0x00CB 
   Select 'Yes' to enable Fast Boot. 
**/
  UINT8                       MemFastBoot;                   
/**Offset 0x00CC 
   Configure how reads and writes of F0000h-FFFFFh handled. 
**/
  UINT8                       pam0_hienable;                 
/**Offset 0x00CD 
   Configure how reads and writes of C0000h-C3FFFh handled. 
**/
  UINT8                       pam1_loenable;                 
/**Offset 0x00CE 
   Configure how reads and writes of C4000h-C7FFFh handled. 
**/
  UINT8                       pam1_hienable;                 
/**Offset 0x00CF 
   Configure how reads and writes of C8000h-CBFFFh handled. 
**/
  UINT8                       pam2_loenable;                 
/**Offset 0x00D0 
   Configure how reads and writes of CC000h-CFFFFh handled. 
**/
  UINT8                       pam2_hienable;                 
/**Offset 0x00D1 
   Configure how reads and writes of D0000h-D3FFFh handled. 
**/
  UINT8                       pam3_loenable;                 
/**Offset 0x00D2 
   Configure how reads and writes of D4000h-D7FFFh handled. 
**/
  UINT8                       pam3_hienable;                 
/**Offset 0x00D3 
   Configure how reads and writes of D8000h-DBFFFh handled. 
**/
  UINT8                       pam4_loenable;                 
/**Offset 0x00D4 
   Configure how reads and writes of DC000h-DFFFFh handled. 
**/
  UINT8                       pam4_hienable;                 
/**Offset 0x00D5 
   Configure how reads and writes of E0000h-E3FFFh handled. 
**/
  UINT8                       pam5_loenable;                 
/**Offset 0x00D6 
   Configure how reads and writes of E4000h-E7FFFh handled. 
**/
  UINT8                       pam5_hienable;                 
/**Offset 0x00D7 
   Configure how reads and writes of E8000h-EBFFFh handled. 
**/
  UINT8                       pam6_loenable;                 
/**Offset 0x00D8 
   Configure how reads and writes of EC000h-EFFFFh handled. 
**/
  UINT8                       pam6_hienable;                 
/**Offset 0x00D9 
   Asynchronous DRAM Refresh - Set to 'Enabled' if DIMMs are battery-backed or if the platform implements saving to some other non-volatile storage medium. Set to 'Enabled (NVDIMMs)' if NVDIMMs will be used on the platform. 
**/
  UINT8                       MemAdr;                        
/**Offset 0x00DA 
**/
  UINT8                       MemAdrResumePath;              
/**Offset 0x00DB 
   Block all PCIe/South Complex Traffic on ADR. (For V0 and later steppings only). 
**/
  UINT8                       MemBlockScTrafficOnAdr;        
/**Offset 0x00DC 
   Specify the i/o port which should be written to when CKE/DDR Reset clamps should be released. Specify '0' to skip. 
**/
  UINT16                      MemPlatformReleaseAdrClampsPort; 
/**Offset 0x00DE 
   Specify the value that should be ANDed with the value read from the clamp release i/o port. 
**/
  UINT32                      MemPlatformReleaseAdrClampsAnd; 
/**Offset 0x00E2 
   Specify the value that should be ORed with the value read from the clamp release i/o port. 
**/
  UINT32                      MemPlatformReleaseAdrClampsOr; 
/**Offset 0x00E6 
**/
  UINT8                       UnusedUpdSpace2[24];           
/**Offset 0x00FE 
**/
  UINT16                      PcdRegionTerminator;           
} UPD_DATA_REGION;

#define FSP_IMAGE_ID    0x5F45442D5844425F        /* '_BDX-DE_' */
#define FSP_IMAGE_REV   0x00000301 

typedef struct _VPD_DATA_REGION {
/**Offset 0x0000 
**/
  UINT64                      PcdVpdRegionSign;              
/**Offset 0x0008 
**/
  UINT32                      PcdImageRevision;              
/**Offset 0x000C 
**/
  UINT32                      PcdUpdRegionOffset;            
/**Offset 0x0010 
**/
  UINT8                       UnusedVpdSpace0[16];           
/**Offset 0x0020 
**/
  UINT32                      PcdFspReservedMemoryLength;    
} VPD_DATA_REGION;

#pragma pack()

#endif
